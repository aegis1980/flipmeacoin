{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/external \"ConvexGeometry\"","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/webpack/runtime/define property getters","webpack://ENABLE3D/webpack/runtime/hasOwnProperty shorthand","webpack://ENABLE3D/webpack/runtime/make namespace object","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/torusShape.ts","webpack://ENABLE3D/../common/dist/physicsBody.js"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__428__","__WEBPACK_EXTERNAL_MODULE__152__","__spreadArray","this","to","from","i","il","length","j","Object","defineProperty","value","Events","version_1","EE","fn","context","once","addListener","emitter","event","TypeError","listener","_events","has","get","set","push","_eventsCount","clearEvent","Map","delete","VERSION","enumerable","configurable","prototype","eventNames","Array","keys","listeners","handlers","l","ee","listenerCount","emit","_a","_b","args","_i","arguments","removeListener","undefined","call","apply","length_1","on","events","removeAllListeners","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","obj","prop","hasOwnProperty","r","Symbol","toStringTag","loggerCache","logger","msg","error","count","console","warn","ExtendedObject3D","Object3D","super","isExtendedObject3D","isGroup","vector3","Vector3","hasBody","fragmentDepth","breakable","fractureImpulse","_currentAnimation","_animationActions","name","id","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","animationMixer","_animationMixer","AnimationMixer","current","add","animation","_animsAdd","_animsGet","play","transitionDuration","loop","_animsPlay","mixer","anims","clipAction","action","next","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","callback","traverse","traverseVisible","traverseAncestors","ExtendedMesh","Mesh","geometry","material","isExtendedMesh","ExtendedGroup","Group","isExtendedGroup","isMesh","Constraints","worldTransform","physicsWorld","tmpBtVector3","Ammo","btVector3","v","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","config","hinge","slider","spring","coneTwist","frameA","frameB","dof","offset","center","transformB","btTransform","setIdentity","v1","getWorldTransform","getOrigin","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","getTransform","ammo","setRotation","getRotation","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","off","btGeneric6DofSpringConstraint","setValue","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","toAmmoV3","PI","setStiffness","setDamping","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","destroy","TYPE","FIT","createHullShape","vertex","matrix","Matrix4","vertices","matrices","matrixWorld","options","type","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","p","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","points","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","parseInt","REVISION","copy","invert","getInverse","setFromMatrixScale","mesh","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","position","array","elements","Box3","minX","minY","minZ","maxX","maxY","maxZ","_iterateVertices","_defaultMaterial","MeshLambertMaterial","color","__rest","s","e","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Factories","scene","isHeadless","defaultMaterial","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","addMesh","existing","object","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","Line","Points","castShadow","receiveShadow","shape","autoCenter","rest","bevelEnabled","ExtrudeBufferGeometry","assign","createMesh","PlaneBufferGeometry","width","height","widthSegments","heightSegments","side","DoubleSide","SphereBufferGeometry","radius","phiStart","phiLength","thetaStart","thetaLength","BoxBufferGeometry","depthSegments","rotateX","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","ConeBufferGeometry","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","custom","CollisionEvents","object1","object2","eventCallback","body","checkCollisions","data","bodies","newConvexGeometry","window","THREE","ConvexGeometry","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","Line3","tempPlane1","Plane","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","mass","velocity","angularVelocity","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","angle","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","a1","b1","c1","a2","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","quaternion","transformFreeVector","m","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","message","path","doneCallback","url","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","loadScriptAsync","PhysicsLoader","__loadPhysics","then","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","Raycaster","physics","_btRayFrom","_btRayTo","_btRayCallback","hasHit","ClosestRayResultCallback","AllHitsRayResultCallback","rayTest","ClosestRaycaster","AllHitsRaycaster","h","get_m_hitPointWorld","get_m_hitNormalWorld","castObject","get_m_collisionObject","btRigidBody","threeObject","size","hh","at","getHitPointsWorld","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","diff","newTime","AmmoPhysics","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","tmpBtQuaternion","btQuaternion","emptyV3","impactPoint","impactNormal","b","includes","isSoftBody","removeSoftBody","removeRigidBody","destructor","splice","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","collisionEvents","collisionFlags","translateX","constraints","debugDrawer","world","debugDrawMode","drawOnTop","maxBufferSize","BufferGeometry","Float32Array","colors","setAttribute","BufferAttribute","setUsage","StaticDrawUsage","vertexColors","depthTest","LineSegments","renderOrder","frustumCulled","enabled","DebugDrawer","drawLine","bind","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","remove","needsUpdate","debugDrawWorld","setDrawRange","heap","HEAPF32","g","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","update","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","setGravity","parent","setTimeout","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","getMotionState","didUpdate","_emitUpdateEvents","eventEmitter","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","w","setWorldTransform","skipUpdate","isStaticObject","q","ignoreScale","getCollisionShape","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","fractureImpulse0","fractureImpulse1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","impulse","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","names","sort","combinedName","find","collision","MAX_FRAGMENT_DEPTH","physicsBody","vel","getLinearVelocity","angVel","getAngularVelocity","fragment","createDebrisFromBreakableObject","removeDebris","split","obj0","enable","disable","setup","collider","addCollider","addConstraints","raycaster","defaultParams","test","parameters","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","sqrt","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","mergeCollisionShapesToCompoundShape","collisionShapes","_tmp","pos","applyPosQuatScaleMargin","getWorldScale","toString","slice","compound","collisionGroup","collisionMask","addChildren","map","createCollisionShape","localTransform","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","prepareThreeObjectForCollisionShape","cs","children","child","addRigidBody","ptr","values","errors","_needUpdate","tmpBtVector3_1","need","updateCallback","setupEventEmitter","onUpdateEvent","collisionCallback","onCollision","setFromEuler","ammoQuat","q1","normalize","setLinearVelocity","setAngularVelocity","applyCentralImpulse","applyCentralForce","applyCentralLocalForce","relativePosition","applyImpulse","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setFriction","linear","angular","setLinearFactor","setAngularFactor","threshold","setCcdMotionThreshold","setCcdSweptSphereRadius","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"mappings":"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","file":"enable3d.ammoPhysics.0.22.0.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"ConvexGeometry\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"], root[\"ConvexGeometry\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__428__, __WEBPACK_EXTERNAL_MODULE__152__) {\nreturn ","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__152__;","module.exports = __WEBPACK_EXTERNAL_MODULE__428__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const loggerCache = new Map();\r\nconst LOG_LIMIT = 5;\r\nexport const logger = (msg, error = false) => {\r\n    if (!loggerCache.has(msg)) {\r\n        loggerCache.set(msg, 1);\r\n    }\r\n    else {\r\n        const count = loggerCache.get(msg);\r\n        if (typeof count === 'undefined')\r\n            return;\r\n        if (count >= LOG_LIMIT)\r\n            return;\r\n        loggerCache.set(msg, count + 1);\r\n    }\r\n    if (error)\r\n        console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n    else\r\n        console.warn(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n};\r\n//# sourceMappingURL=logger.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { AnimationMixer, LoopOnce, Object3D, Vector3 } from 'three';\r\nimport { logger } from './logger';\r\nexport class ExtendedObject3D extends Object3D {\r\n    constructor() {\r\n        super();\r\n        this.isExtendedObject3D = true;\r\n        this.isGroup = false;\r\n        this.vector3 = new Vector3();\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this._currentAnimation = '';\r\n        this._animationActions = new Map();\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n    set animationMixer(animationMixer) {\r\n        this._animationMixer = animationMixer;\r\n    }\r\n    get animationMixer() {\r\n        if (!this._animationMixer)\r\n            this._animationMixer = new AnimationMixer(this);\r\n        return this._animationMixer;\r\n    }\r\n    /** Control your animations. */\r\n    get anims() {\r\n        return {\r\n            /** Get the name of the current animation. */\r\n            current: this._currentAnimation,\r\n            /** Add animation name and the AnimationClip. */\r\n            add: (name, animation) => this._animsAdd(name, animation),\r\n            /** Get AnimationAction by animation name. */\r\n            get: (name) => this._animsGet(name),\r\n            /**\r\n             * Play an animation.\r\n             * @param name Animation name.\r\n             * @param transitionDuration Transition duration in ms.\r\n             * @param loop Should the animation loop?\r\n             */\r\n            play: (name, transitionDuration = 500, loop = true) => this._animsPlay(name, transitionDuration, loop),\r\n            /** Get the AnimationMixer */\r\n            mixer: this.animationMixer\r\n        };\r\n    }\r\n    /** @deprecated Please use anims instead! */\r\n    get animation() {\r\n        logger('Please use \"anims\" instead of \"animation\"');\r\n        return this.anims;\r\n    }\r\n    _animsAdd(name, animation) {\r\n        this._animationActions.set(name, this.animationMixer.clipAction(animation));\r\n    }\r\n    _animsGet(name) {\r\n        const action = this._animationActions.get(name);\r\n        if (!action)\r\n            logger(`Animation(${name}) not found!`);\r\n        return action;\r\n    }\r\n    _animsPlay(name, transitionDuration = 500, loop = true) {\r\n        const next = this._animationActions.get(name);\r\n        const current = this._animationActions.get(this._currentAnimation);\r\n        if (next) {\r\n            next.reset();\r\n            if (current) {\r\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\r\n                next.clampWhenFinished = true;\r\n            }\r\n            if (!loop)\r\n                next.setLoop(LoopOnce, 0);\r\n            next.play();\r\n        }\r\n        this._currentAnimation = name;\r\n    }\r\n    /** @deprecated Use animation.play(name) instead! */\r\n    setAction(name) {\r\n        logger(`setAction(${name}) is deprecated. Use animation.play(${name}) instead!`);\r\n    }\r\n    traverse(callback) {\r\n        super.traverse(callback);\r\n    }\r\n    traverseVisible(callback) {\r\n        super.traverseVisible(callback);\r\n    }\r\n    traverseAncestors(callback) {\r\n        super.traverseAncestors(callback);\r\n    }\r\n}\r\nexport default ExtendedObject3D;\r\n//# sourceMappingURL=extendedObject3D.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Mesh, Vector3 } from 'three';\r\nexport class ExtendedMesh extends Mesh {\r\n    constructor(geometry, material) {\r\n        super(geometry, material);\r\n        this.isExtendedMesh = true;\r\n        this.isGroup = false;\r\n        this.vector3 = new Vector3();\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n}\r\n//# sourceMappingURL=extendedMesh.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Group } from 'three';\r\nexport class ExtendedGroup extends Group {\r\n    constructor() {\r\n        super();\r\n        this.isExtendedGroup = true;\r\n        this.isMesh = false;\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n}\r\n//# sourceMappingURL=extendedGroup.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\n\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\nimport { XYZ } from '@enable3d/common/dist/types'\n\nexport default class Constraints {\n  public tmpBtVector3 = new Ammo.btVector3()\n\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\n\n  private toAmmoV3(v?: XYZ, d: number = 0) {\n    return new Ammo.btVector3(\n      typeof v?.x !== 'undefined' ? v.x : d,\n      typeof v?.y !== 'undefined' ? v.y : d,\n      typeof v?.z !== 'undefined' ? v.z : d\n    )\n  }\n\n  public get addConstraints() {\n    return {\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\n      pointToPoint: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          pivotA?: XYZ\n          pivotB?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      hinge: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          pivotA?: XYZ\n          pivotB?: XYZ\n          axisA?: XYZ\n          axisB?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      slider: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          frameA?: XYZ\n          frameB?: XYZ\n          linearLowerLimit?: number\n          linearUpperLimit?: number\n          angularLowerLimit?: number\n          angularUpperLimit?: number\n        } = {},\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      spring: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          stiffness?: number\n          damping?: number\n          angularLock?: boolean\n          linearLowerLimit?: XYZ\n          linearUpperLimit?: XYZ\n          angularLowerLimit?: XYZ\n          angularUpperLimit?: XYZ\n          center?: boolean\n          offset?: XYZ\n          enableSpring?: boolean\n        } = {},\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      coneTwist: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config: {\n          frameA: XYZ\n          frameB: XYZ\n        } = { frameA: {}, frameB: {} },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\n      dof: (\n        bodyA: PhysicsBody,\n        bodyB: PhysicsBody,\n        config?: {\n          linearLowerLimit?: XYZ\n          linearUpperLimit?: XYZ\n          angularLowerLimit?: XYZ\n          angularUpperLimit?: XYZ\n          center?: boolean\n          offset?: XYZ\n        },\n        disableCollisionsBetweenLinkedBodies?: boolean\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\n    }\n  }\n\n  private getTransform(\n    bodyA: Ammo.btRigidBody,\n    bodyB: Ammo.btRigidBody,\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\n    center: boolean = false\n  ) {\n    // @ts-ignore\n    offset = { x: 0, y: 0, z: 0, ...offset }\n\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\n      return new Ammo.btVector3(dx, dy, dz)\n    }\n\n    const transformB = new Ammo.btTransform()\n    transformB.setIdentity()\n\n    if (!center) {\n      // offset\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\n\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform()).op_mul(transformB)\n\n      return { transformA: transformA, transformB: transformB }\n    } else {\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\n\n      const transformB = new Ammo.btTransform()\n      transformB.setIdentity()\n      transformB.setOrigin(center)\n\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform())\n\n      transformA.op_mul(transformB)\n\n      return { transformA: transformA, transformB: transformB }\n    }\n  }\n\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\n    const zero = { x: 0, y: 0, z: 0 }\n    return this.dof(\n      bodyA,\n      bodyB,\n      { angularLowerLimit: zero, angularUpperLimit: zero },\n      disableCollisionsBetweenLinkedBodies\n    )\n  }\n\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private pointToPoint(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      pivotA?: XYZ\n      pivotB?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { pivotA, pivotB } = config\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private hinge(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      pivotA?: XYZ\n      pivotB?: XYZ\n      axisA?: XYZ\n      axisB?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { pivotA, pivotB, axisA, axisB } = config\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\n    const constraint = new Ammo.btHingeConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      pivotV3,\n      targetPivotV3,\n      axisV3,\n      targetAxisV3,\n      true\n    )\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\n  private slider(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      frameA?: XYZ\n      frameB?: XYZ\n      linearLowerLimit?: number\n      linearUpperLimit?: number\n      angularLowerLimit?: number\n      angularUpperLimit?: number\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\n\n    const {\n      frameA = {},\n      frameB = {},\n      linearLowerLimit: lll = 0,\n      linearUpperLimit: lul = 0,\n      angularLowerLimit: all = 0,\n      angularUpperLimit: aul = 0\n    } = config\n\n    const rotationA = transform.transformA.getRotation()\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\n    transform.transformA.setRotation(rotationA)\n\n    const rotationB = transform.transformB.getRotation()\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\n    transform.transformB.setRotation(rotationB)\n\n    const constraint = new Ammo.btSliderConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    constraint.setLowerLinLimit(lll)\n    constraint.setUpperLinLimit(lul)\n    constraint.setLowerAngLimit(all)\n    constraint.setUpperAngLimit(aul)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n    return constraint\n  }\n\n  private spring(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      stiffness?: number\n      damping?: number\n      angularLock?: boolean\n      linearLowerLimit?: XYZ\n      linearUpperLimit?: XYZ\n      angularLowerLimit?: XYZ\n      angularUpperLimit?: XYZ\n      center?: boolean\n      offset?: XYZ\n      enableSpring?: boolean\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const {\n      stiffness = 50,\n      damping = 0.01,\n      angularLock = false,\n      linearLowerLimit: lll = {},\n      linearUpperLimit: lul = {},\n      angularLowerLimit: all = {},\n      angularUpperLimit: aul = {},\n      offset = {},\n      center = false,\n      enableSpring = true\n    } = config\n\n    const off = { x: 0, y: 0, z: 0, ...offset }\n\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\n\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\n\n    if (angularLock) {\n      this.tmpBtVector3.setValue(0, 0, 0)\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\n    } else {\n      console.log(all, aul)\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\n    }\n\n    for (let i = 0; i < 3; i++) {\n      constraint.enableSpring(i, enableSpring)\n      constraint.setStiffness(i, stiffness)\n      constraint.setDamping(i, damping)\n    }\n\n    // I have no idea what setEquilibriumPoint does :/\n    // constraint.setEquilibriumPoint()\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n\n  private coneTwist(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: { frameA: XYZ; frameB: XYZ },\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { frameA, frameB } = config\n\n    const rbAFrame = new Ammo.btTransform()\n    rbAFrame.setIdentity()\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\n\n    const rbBFrame = new Ammo.btTransform()\n    rbBFrame.setIdentity()\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\n\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\n\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\n\n    // does not work at all :/\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\n\n    constraint.setAngularOnly(true)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n\n  private dof(\n    bodyA: PhysicsBody,\n    bodyB: PhysicsBody,\n    config: {\n      linearLowerLimit?: XYZ\n      linearUpperLimit?: XYZ\n      angularLowerLimit?: XYZ\n      angularUpperLimit?: XYZ\n      center?: boolean\n      offset?: XYZ\n    } = {},\n    disableCollisionsBetweenLinkedBodies = true\n  ) {\n    const { offset, center = false } = config\n    const off = { x: 0, y: 0, z: 0, ...offset }\n\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\n\n    const constraint = new Ammo.btGeneric6DofConstraint(\n      bodyA.ammo,\n      bodyB.ammo,\n      transform.transformA,\n      transform.transformB,\n      true\n    )\n\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\n\n    const lll = this.toAmmoV3(linearLowerLimit)\n    const lul = this.toAmmoV3(linearUpperLimit)\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\n\n    constraint.setLinearLowerLimit(lll)\n    constraint.setLinearUpperLimit(lul)\n    constraint.setAngularLowerLimit(all)\n    constraint.setAngularUpperLimit(aul)\n\n    Ammo.destroy(lll)\n    Ammo.destroy(lul)\n    Ammo.destroy(all)\n    Ammo.destroy(aul)\n\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\n\n    return constraint\n  }\n}\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n * (Includes latest three-to-ammo commit from August 6, 2020)\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\r\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from 'three'\r\n;('use strict')\r\n/* global Ammo */\r\n\r\nexport const TYPE = {\r\n  BOX: 'box',\r\n  CYLINDER: 'cylinder',\r\n  SPHERE: 'sphere',\r\n  CAPSULE: 'capsule',\r\n  CONE: 'cone',\r\n  HULL: 'hull',\r\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\r\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\r\n  MESH: 'mesh',\r\n  HEIGHTFIELD: 'heightfield'\r\n}\r\n\r\nexport const FIT = {\r\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\r\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\r\n}\r\n\r\nexport const HEIGHTFIELD_DATA_TYPE = {\r\n  short: 'short',\r\n  float: 'float'\r\n}\r\n\r\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n  switch (options.type) {\r\n    case TYPE.BOX:\r\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CYLINDER:\r\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CAPSULE:\r\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CONE:\r\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.SPHERE:\r\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HULL:\r\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HACD:\r\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.VHACD:\r\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.MESH:\r\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\r\n    case TYPE.HEIGHTFIELD:\r\n      return [createHeightfieldTerrainShape(options)]\r\n    default:\r\n      console.warn(options.type + ' is not currently supported')\r\n      return []\r\n  }\r\n}\r\n\r\n//TODO: support gimpact (dynamic trimesh) and heightmap\r\n\r\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.BOX\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CYLINDER\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCylinderShape(btHalfExtents)\r\n      case 'x':\r\n        return new Ammo.btCylinderShapeX(btHalfExtents)\r\n      case 'z':\r\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\r\n    }\r\n    return null\r\n  })()\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CAPSULE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CONE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.SPHERE\r\n  _setOptions(options)\r\n\r\n  let radius\r\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\r\n    radius = options.sphereRadius\r\n  } else {\r\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\r\n  }\r\n\r\n  const collisionShape = new Ammo.btSphereShape(radius)\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n\r\n  return collisionShape\r\n}\r\n\r\nexport const createHullShape = (function () {\r\n  const vertex = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, matrixWorld, options = {}) {\r\n    options.type = TYPE.HULL\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hull')\r\n      return null\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n\r\n    const btVertex = new Ammo.btVector3()\r\n    const originalHull = new Ammo.btConvexHullShape()\r\n    originalHull.setMargin(options.margin)\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    let vertexCount = 0\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n    }\r\n\r\n    const maxVertices = options.hullMaxVertices || 100000\r\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\r\n    if (vertexCount > maxVertices) {\r\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\r\n    }\r\n    const p = Math.min(1, maxVertices / vertexCount)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\r\n        if (Math.random() <= p || isLastVertex) {\r\n          // always include the last vertex\r\n          vertex\r\n            .set(components[j], components[j + 1], components[j + 2])\r\n            .applyMatrix4(matrix)\r\n            .sub(center)\r\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\r\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\r\n        }\r\n      }\r\n    }\r\n\r\n    let collisionShape = originalHull\r\n    if (originalHull.getNumVertices() >= 100) {\r\n      //Bullet documentation says don't use convexHulls with 100 verts or more\r\n      const shapeHull = new Ammo.btShapeHull(originalHull)\r\n      shapeHull.buildHull(options.margin)\r\n      Ammo.destroy(originalHull)\r\n      collisionShape = new Ammo.btConvexHullShape(\r\n        Ammo.getPointer(shapeHull.getVertexPointer()),\r\n        shapeHull.numVertices()\r\n      )\r\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\r\n    }\r\n\r\n    Ammo.destroy(btVertex)\r\n\r\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.HACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('HACD')) {\r\n      console.warn(\r\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const hacd = new Ammo.HACD()\r\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\r\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\r\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\r\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\r\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n    hacd.SetPoints(points)\r\n    hacd.SetTriangles(triangles)\r\n    hacd.SetNPoints(vertexCount)\r\n    hacd.SetNTriangles(triCount)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n\r\n    hacd.Compute()\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nClusters = hacd.GetNClusters()\r\n\r\n    const shapes = []\r\n    for (let i = 0; i < nClusters; i++) {\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n      const nPoints = hacd.GetNPointsCH(i)\r\n      const nTriangles = hacd.GetNTrianglesCH(i)\r\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\r\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\r\n      hacd.GetCH(i, hullPoints, hullTriangles)\r\n\r\n      const pptr = hullPoints / 8\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\r\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\r\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createVHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.VHACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: vhacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('VHACD')) {\r\n      console.warn(\r\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const vhacd = new Ammo.VHACD()\r\n    const params = new Ammo.Parameters()\r\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\r\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\r\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\r\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\r\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\r\n    if (options.hasOwnProperty('convexhullDownsampling'))\r\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\r\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\r\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\r\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\r\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\r\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\r\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\r\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\r\n    if (options.hasOwnProperty('convexhullApproximation'))\r\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\r\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nHulls = vhacd.GetNConvexHulls()\r\n\r\n    const shapes = []\r\n    const ch = new Ammo.ConvexHull()\r\n    for (let i = 0; i < nHulls; i++) {\r\n      vhacd.GetConvexHull(i, ch)\r\n      const nPoints = ch.get_m_nPoints()\r\n      const hullPoints = ch.get_m_points()\r\n\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = ch.get_m_points(pi * 3 + 0)\r\n        const py = ch.get_m_points(pi * 3 + 1)\r\n        const pz = ch.get_m_points(pi * 3 + 2)\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n    Ammo.destroy(ch)\r\n    Ammo.destroy(vhacd)\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createTriMeshShape = (function () {\r\n  const va = new Vector3()\r\n  const vb = new Vector3()\r\n  const vc = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.MESH\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: mesh')\r\n      return null\r\n    }\r\n\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    const bta = new Ammo.btVector3()\r\n    const btb = new Ammo.btVector3()\r\n    const btc = new Ammo.btVector3()\r\n    const triMesh = new Ammo.btTriangleMesh(true, false)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      const index = indexes[i] ? indexes[i] : null\r\n      matrix.fromArray(matrices[i])\r\n      if (index) {\r\n        for (let j = 0; j < index.length; j += 3) {\r\n          const ai = index[j] * 3\r\n          const bi = index[j + 1] * 3\r\n          const ci = index[j + 2] * 3\r\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\r\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\r\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length; j += 9) {\r\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\r\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\r\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    triMesh.setScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\r\n    let collisionShape\r\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\r\n\r\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n\r\n    collisionShape.resources = [triMesh]\r\n\r\n    Ammo.destroy(bta)\r\n    Ammo.destroy(btb)\r\n    Ammo.destroy(btc)\r\n\r\n    _finishCollisionShape(collisionShape, options)\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHeightfieldTerrainShape = function (options = {}) {\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    console.warn('cannot use fit: all with type: heightfield')\r\n    return null\r\n  }\r\n  const heightfieldDistance = options.heightfieldDistance || 1\r\n  const heightfieldData = options.heightfieldData || []\r\n  const heightScale = options.heightScale || 0\r\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\r\n  const hdt = (() => {\r\n    switch (options.heightDataType) {\r\n      case 'short':\r\n        return Ammo.PHY_SHORT\r\n      case 'float':\r\n        return Ammo.PHY_FLOAT\r\n      default:\r\n        return Ammo.PHY_FLOAT\r\n    }\r\n  })()\r\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\r\n\r\n  const heightStickLength = heightfieldData.length\r\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\r\n\r\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\r\n  const ptr = data / 4\r\n\r\n  let minHeight = Number.POSITIVE_INFINITY\r\n  let maxHeight = Number.NEGATIVE_INFINITY\r\n  let index = 0\r\n  for (let l = 0; l < heightStickLength; l++) {\r\n    for (let w = 0; w < heightStickWidth; w++) {\r\n      const height = heightfieldData[l][w]\r\n      Ammo.HEAPF32[ptr + index] = height\r\n      index++\r\n      minHeight = Math.min(minHeight, height)\r\n      maxHeight = Math.max(maxHeight, height)\r\n    }\r\n  }\r\n\r\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\r\n    heightStickWidth,\r\n    heightStickLength,\r\n    data,\r\n    heightScale,\r\n    minHeight,\r\n    maxHeight,\r\n    upAxis,\r\n    hdt,\r\n    flipQuadEdges\r\n  )\r\n\r\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\r\n  collisionShape.setLocalScaling(scale)\r\n  Ammo.destroy(scale)\r\n\r\n  collisionShape.heightfieldData = data\r\n\r\n  _finishCollisionShape(collisionShape, options)\r\n  return collisionShape\r\n}\r\n\r\nfunction _setOptions(options) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  // we only keep type and margin\r\n  options.type = options.type || TYPE.HULL\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  return\r\n\r\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\r\n  options.type = options.type || TYPE.HULL\r\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\r\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\r\n  options.cylinderAxis = options.cylinderAxis || 'y'\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\r\n\r\n  if (!options.offset) {\r\n    options.offset = new Vector3()\r\n  }\r\n\r\n  if (!options.orientation) {\r\n    options.orientation = new Quaternion()\r\n  }\r\n}\r\n\r\nconst _finishCollisionShape = function (collisionShape, options, scale) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  return\r\n\r\n  collisionShape.type = options.type\r\n  collisionShape.setMargin(options.margin)\r\n  collisionShape.destroy = () => {\r\n    for (let res of collisionShape.resources || []) {\r\n      Ammo.destroy(res)\r\n    }\r\n    if (collisionShape.heightfieldData) {\r\n      Ammo._free(collisionShape.heightfieldData)\r\n    }\r\n    Ammo.destroy(collisionShape)\r\n  }\r\n\r\n  const localTransform = new Ammo.btTransform()\r\n  const rotation = new Ammo.btQuaternion()\r\n  localTransform.setIdentity()\r\n\r\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\r\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\r\n\r\n  localTransform.setRotation(rotation)\r\n  Ammo.destroy(rotation)\r\n\r\n  if (scale) {\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n  }\r\n\r\n  collisionShape.localTransform = localTransform\r\n}\r\n\r\nexport const iterateGeometries = (function () {\r\n  const inverse = new Matrix4()\r\n  return function (root, options, cb) {\r\n    // MOD (yandeu): Update to three.js r123\r\n    // compatibility fix for three.js >= r123 (Dezember 2020)\r\n    if (parseInt(REVISION) >= 123) inverse.copy(root.matrixWorld).invert()\r\n    else inverse.getInverse(root.matrixWorld)\r\n\r\n    const scale = new Vector3()\r\n    scale.setFromMatrixScale(root.matrixWorld)\r\n    root.traverse(mesh => {\r\n      const transform = new Matrix4()\r\n      if (\r\n        mesh.isMesh &&\r\n        // MOD (yandeu): No need to check if name is 'Sky'\r\n        // mesh.name !== 'Sky' &&\r\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\r\n      ) {\r\n        if (mesh === root) {\r\n          transform.identity()\r\n        } else {\r\n          mesh.updateWorldMatrix(true)\r\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\r\n        }\r\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\r\n        // things by the identity matrix\r\n        cb(\r\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\r\n          transform.elements,\r\n          mesh.geometry.index ? mesh.geometry.index.array : null\r\n        )\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst _computeScale = (function () {\r\n  const matrix = new Matrix4()\r\n  return function (matrixWorld, options = {}) {\r\n    const scale = new Vector3(1, 1, 1)\r\n    if (options.fit === FIT.ALL) {\r\n      matrix.fromArray(matrixWorld)\r\n      scale.setFromMatrixScale(matrix)\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nconst _computeRadius = (function () {\r\n  const center = new Vector3()\r\n  return function (vertices, matrices, bounds) {\r\n    let maxRadiusSq = 0\r\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\r\n\r\n    _iterateVertices(vertices, matrices, v => {\r\n      const dx = cx - v.x\r\n      const dy = cy - v.y\r\n      const dz = cz - v.z\r\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\r\n    })\r\n    return Math.sqrt(maxRadiusSq)\r\n  }\r\n})()\r\n\r\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\r\n  const halfExtents = new Vector3()\r\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\r\n}\r\n\r\nconst _computeLocalOffset = function (matrix, bounds, target) {\r\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\r\n  return target\r\n}\r\n\r\n// returns the bounding box for the geometries underneath `root`.\r\nconst _computeBounds = function (vertices, matrices) {\r\n  const bounds = new Box3()\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  bounds.min.set(0, 0, 0)\r\n  bounds.max.set(0, 0, 0)\r\n\r\n  _iterateVertices(vertices, matrices, v => {\r\n    if (v.x < minX) minX = v.x\r\n    if (v.y < minY) minY = v.y\r\n    if (v.z < minZ) minZ = v.z\r\n    if (v.x > maxX) maxX = v.x\r\n    if (v.y > maxY) maxY = v.y\r\n    if (v.z > maxZ) maxZ = v.z\r\n  })\r\n\r\n  bounds.min.set(minX, minY, minZ)\r\n  bounds.max.set(maxX, maxY, maxZ)\r\n  return bounds\r\n}\r\n\r\nconst _iterateVertices = (function () {\r\n  const vertex = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, cb) {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < vertices[i].length; j += 3) {\r\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\r\n        cb(vertex)\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { MeshLambertMaterial } from 'three';\r\nclass DefaultMaterial {\r\n    constructor() {\r\n        this._defaultMaterial = new MeshLambertMaterial({ color: 0xcccccc });\r\n    }\r\n    get() {\r\n        return this._defaultMaterial;\r\n    }\r\n}\r\nexport default DefaultMaterial;\r\n//# sourceMappingURL=defaultMaterial.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { BoxBufferGeometry, ConeBufferGeometry, CylinderBufferGeometry, DoubleSide, ExtrudeBufferGeometry, Line, LineBasicMaterial, MeshBasicMaterial, MeshLambertMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, PlaneBufferGeometry, Points, PointsMaterial, SphereBufferGeometry, MathUtils as THREE_Math, TorusBufferGeometry } from 'three';\r\nimport { ExtendedMesh } from './extendedMesh';\r\nimport { logger } from './logger';\r\nimport DefaultMaterial from './defaultMaterial';\r\nexport default class Factories {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.isHeadless = scene === 'headless' ? true : false;\r\n        this.defaultMaterial = new DefaultMaterial();\r\n    }\r\n    get make() {\r\n        return {\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\r\n        };\r\n    }\r\n    get add() {\r\n        return {\r\n            // effectComposer: () => this.addEffectComposer(),\r\n            mesh: (mesh) => this.addMesh(mesh),\r\n            // group: (...children) => this.addGroup(children),\r\n            existing: (object) => this.addExisting(object),\r\n            //  Geometry\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\r\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\r\n            //...\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\r\n            //...\r\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\r\n        };\r\n    }\r\n    addExisting(...object) {\r\n        if (this.scene === 'headless')\r\n            return;\r\n        this.scene.add(...object);\r\n    }\r\n    addMesh(mesh) {\r\n        if (Array.isArray(mesh)) {\r\n            for (let i = 0; i < mesh.length; i++) {\r\n                this.addExisting(mesh[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.addExisting(mesh);\r\n        }\r\n        return this;\r\n    }\r\n    createMesh(geometry, material, position) {\r\n        const { x = 0, y = 0, z = 0 } = position;\r\n        let obj;\r\n        switch (!Array.isArray(material) && material.type) {\r\n            case 'LineBasicMaterial':\r\n                obj = new Line(geometry, material);\r\n                break;\r\n            case 'PointsMaterial':\r\n                obj = new Points(geometry, material);\r\n                break;\r\n            default:\r\n                obj = new ExtendedMesh(geometry, material);\r\n                break;\r\n        }\r\n        obj.position.set(x, y, z);\r\n        obj.castShadow = obj.receiveShadow = true;\r\n        return obj;\r\n    }\r\n    makeExtrude(extrudeConfig, materialConfig) {\r\n        const { x, y, z, name, shape, autoCenter = true, breakable = false } = extrudeConfig, rest = __rest(extrudeConfig\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\"]);\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        const { depth = 1, bevelEnabled = false } = rest;\r\n        const geometry = new ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        // auto adjust the center for custom shapes\r\n        if (autoCenter)\r\n            mesh.geometry.center();\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'extrude';\r\n        return mesh;\r\n    }\r\n    addExtrude(extrudeConfig, materialConfig = {}) {\r\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makePlane(planeConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\r\n        const material = this.addMaterial(materialConfig);\r\n        material.side = DoubleSide;\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'plane';\r\n        return mesh;\r\n    }\r\n    addPlane(planeConfig, materialConfig) {\r\n        const obj = this.makePlane(planeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeSphere(sphereConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'sphere';\r\n        return mesh;\r\n    }\r\n    addSphere(sphereConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeSphere(sphereConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeBox(boxConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'box';\r\n        return mesh;\r\n    }\r\n    addBox(boxConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeBox(boxConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addGround(groundConfig, materialConfig = {}) {\r\n        const obj = this.makeBox(groundConfig, materialConfig);\r\n        obj.rotateX(THREE_Math.degToRad(90));\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cylinder';\r\n        return mesh;\r\n    }\r\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCone(coneConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cone';\r\n        return mesh;\r\n    }\r\n    addCone(coneConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCone(coneConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\r\n    makeTorus(torusConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'torus';\r\n        return mesh;\r\n    }\r\n    addTorus(torusConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeTorus(torusConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addMaterial(materialConfig = {}) {\r\n        const type = Object.keys(materialConfig)[0];\r\n        let material;\r\n        // if (type) {\r\n        //   const { map } = materialConfig[type]\r\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\r\n        // }\r\n        // always share the same material in headless mode to save memory\r\n        if (this.scene === 'headless')\r\n            return this.defaultMaterial.get();\r\n        switch (type) {\r\n            case 'basic':\r\n                material = new MeshBasicMaterial(materialConfig.basic);\r\n                break;\r\n            case 'normal':\r\n                material = new MeshNormalMaterial(materialConfig.normal);\r\n                break;\r\n            case 'standard':\r\n                material = new MeshStandardMaterial(materialConfig.standard);\r\n                break;\r\n            case 'lambert':\r\n                material = new MeshLambertMaterial(materialConfig.lambert);\r\n                break;\r\n            case 'phong':\r\n                material = new MeshPhongMaterial(materialConfig.phong);\r\n                break;\r\n            case 'physical':\r\n                if (typeof materialConfig.physical !== 'undefined') {\r\n                    material = new MeshPhysicalMaterial(materialConfig.physical);\r\n                }\r\n                else {\r\n                    logger('You need to pass parameters to the physical material. (Fallback to default material)');\r\n                    material = this.defaultMaterial.get();\r\n                }\r\n                break;\r\n            case 'toon':\r\n                material = new MeshToonMaterial(materialConfig.toon);\r\n                break;\r\n            case 'line':\r\n                material = new LineBasicMaterial(materialConfig.line);\r\n                break;\r\n            case 'points':\r\n                material = new PointsMaterial(materialConfig.points);\r\n                break;\r\n            case 'custom':\r\n                material = materialConfig.custom || this.defaultMaterial.get();\r\n                break;\r\n            default:\r\n                material = this.defaultMaterial.get();\r\n                break;\r\n        }\r\n        return material;\r\n    }\r\n}\r\n//# sourceMappingURL=factories.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { Events } from '@yandeu/events'\nimport { CollisionEvent, ExtendedObject3D } from '@enable3d/common/dist/types'\nimport { Types } from './physics'\n\nexport class CollisionEvents extends Events {\n  public worldTransform: Ammo.btTransform\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\n\n  public addCollider(\n    object1: ExtendedObject3D,\n    object2: ExtendedObject3D,\n    eventCallback: (event: CollisionEvent) => void\n  ) {\n    if (!object1.body || !object2.body) return\n\n    object1.body.checkCollisions = true\n    object2.body.checkCollisions = true\n\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\n      const { bodies, event } = data\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\n      }\n    })\n  }\n}\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n\r\n/**\r\n * Copied from three.js examples and added a fix\r\n */\r\n\r\n/**\r\n * @author yomboprime https://github.com/yomboprime\r\n *\r\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\r\n *\r\n * Usage:\r\n *\r\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\r\n *\r\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\r\n *\r\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\r\n *\r\n * Requisites for the object:\r\n *\r\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\r\n *\r\n *  - Vertex normals must be planar (not smoothed)\r\n *\r\n *  - The geometry must be convex (this is not checked in the library). You can create convex\r\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\r\n *  can also be used.\r\n *\r\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\r\n * Use with caution and read the code when using with other libs.\r\n *\r\n * @param {double} minSizeForBreak Min size a debris can have to break.\r\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\r\n *\r\n */\r\n\r\nimport { Line3, Mesh, Plane, Vector3 } from 'three'\r\nimport { ConvexGeometry } from './externals'\r\nimport { logger } from '@enable3d/common/dist/logger'\r\n\r\nconst newConvexGeometry = (points: Vector3[]) => {\r\n  // @ts-ignore\r\n  const _newConvexGeometry = window.THREE && window.THREE.ConvexGeometry ? window.THREE.ConvexGeometry : ConvexGeometry\r\n  return new _newConvexGeometry(points)\r\n}\r\n\r\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\r\n  // @ts-ignore\r\n  this.minSizeForBreak = minSizeForBreak || 1.4\r\n  // @ts-ignore\r\n  this.smallDelta = smallDelta || 0.0001\r\n\r\n  // @ts-ignore\r\n  this.tempLine1 = new Line3()\r\n  // @ts-ignore\r\n  this.tempPlane1 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane2 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane_Cut = new Plane()\r\n  // @ts-ignore\r\n  this.tempCM1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempCM2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_AB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_CB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempResultObjects = { object1: null, object2: null }\r\n\r\n  // @ts-ignore\r\n  this.segments = []\r\n  var n = 30 * 30\r\n  // @ts-ignore\r\n  for (var i = 0; i < n; i++) this.segments[i] = false\r\n}\r\n\r\nConvexObjectBreaker.prototype = {\r\n  constructor: ConvexObjectBreaker,\r\n\r\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\r\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\r\n    // Its material property is propagated to its children (sub-pieces)\r\n    // mass must be > 0\r\n\r\n    if (!object.geometry.isBufferGeometry) {\r\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\r\n    }\r\n\r\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\r\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\r\n    ammoPhysicsData.mass = mass\r\n    ammoPhysicsData.velocity = velocity.clone()\r\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\r\n    ammoPhysicsData.breakable = breakable\r\n  },\r\n\r\n  /*\r\n   * @param {int} maxRadialIterations Iterations for radial cuts.\r\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\r\n   *\r\n   * Returns the array of pieces\r\n   */\r\n  subdivideByImpact: function (\r\n    object: any,\r\n    pointOfImpact: any,\r\n    normal: any,\r\n    maxRadialIterations: any,\r\n    maxRandomIterations: any\r\n  ) {\r\n    var debris: any = []\r\n\r\n    var tempPlane1 = this.tempPlane1\r\n    var tempPlane2 = this.tempPlane2\r\n\r\n    this.tempVector3.addVectors(pointOfImpact, normal)\r\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\r\n\r\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\r\n\r\n    var scope = this\r\n\r\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\r\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\r\n        debris.push(subObject)\r\n\r\n        return\r\n      }\r\n\r\n      var angle = Math.PI\r\n\r\n      if (numIterations === 0) {\r\n        tempPlane2.normal.copy(tempPlane1.normal)\r\n        tempPlane2.constant = tempPlane1.constant\r\n      } else {\r\n        if (numIterations <= maxRadialIterations) {\r\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\r\n\r\n          // Rotate tempPlane2 at impact point around normal axis and the angle\r\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\r\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\r\n        } else {\r\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\r\n\r\n          // Rotate tempPlane2 at object position around normal axis and the angle\r\n          scope.tempVector3_2\r\n            .copy(pointOfImpact)\r\n            .sub(subObject.position)\r\n            .applyAxisAngle(normal, angle)\r\n            .add(subObject.position)\r\n          scope.tempVector3_3.copy(normal).add(subObject.position)\r\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\r\n        }\r\n      }\r\n\r\n      // Perform the cut\r\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\r\n\r\n      var obj1 = scope.tempResultObjects.object1\r\n      var obj2 = scope.tempResultObjects.object2\r\n\r\n      if (obj1) {\r\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\r\n      }\r\n\r\n      if (obj2) {\r\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\r\n      }\r\n    }\r\n\r\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\r\n\r\n    return debris\r\n  },\r\n\r\n  cutByPlane: function (object: any, plane: any, output: any) {\r\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\r\n    // object2 can be null if the plane doesn't cut the object.\r\n    // object1 can be null only in case of internal error\r\n    // Returned value is number of pieces, 0 for error.\r\n\r\n    var geometry = object.geometry\r\n    var coords = geometry.attributes.position.array\r\n    var normals = geometry.attributes.normal.array\r\n\r\n    var numPoints = coords.length / 3\r\n    var numFaces = numPoints / 3\r\n\r\n    var indices = geometry.getIndex()\r\n\r\n    if (indices) {\r\n      indices = indices.array\r\n      numFaces = indices.length / 3\r\n    }\r\n\r\n    function getVertexIndex(faceIdx: any, vert: any) {\r\n      // vert = 0, 1 or 2.\r\n\r\n      var idx = faceIdx * 3 + vert\r\n\r\n      return indices ? indices[idx] : idx\r\n    }\r\n\r\n    var points1 = []\r\n    var points2 = []\r\n\r\n    var delta = this.smallDelta\r\n\r\n    // Reset segments mark\r\n    var numPointPairs = numPoints * numPoints\r\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\r\n\r\n    var p0 = this.tempVector3_P0\r\n    var p1 = this.tempVector3_P1\r\n    var n0 = this.tempVector3_N0\r\n    var n1 = this.tempVector3_N1\r\n\r\n    // Iterate through the faces to mark edges shared by coplanar faces\r\n    for (var i = 0; i < numFaces - 1; i++) {\r\n      var a1 = getVertexIndex(i, 0)\r\n      var b1 = getVertexIndex(i, 1)\r\n      var c1 = getVertexIndex(i, 2)\r\n\r\n      // Assuming all 3 vertices have the same normal\r\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\r\n\r\n      for (var j = i + 1; j < numFaces; j++) {\r\n        var a2 = getVertexIndex(j, 0)\r\n        var b2 = getVertexIndex(j, 1)\r\n        var c2 = getVertexIndex(j, 2)\r\n\r\n        // Assuming all 3 vertices have the same normal\r\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\r\n\r\n        var coplanar = 1 - n0.dot(n1) < delta\r\n\r\n        if (coplanar) {\r\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\r\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n              this.segments[a1 * numPoints + b1] = true\r\n              this.segments[b1 * numPoints + a1] = true\r\n            } else {\r\n              this.segments[c1 * numPoints + a1] = true\r\n              this.segments[a1 * numPoints + c1] = true\r\n            }\r\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n            this.segments[c1 * numPoints + b1] = true\r\n            this.segments[b1 * numPoints + c1] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Transform the plane to object local space\r\n    var localPlane = this.tempPlane_Cut\r\n    object.updateMatrix()\r\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\r\n\r\n    // Iterate through the faces adding points to both pieces\r\n    for (var i = 0; i < numFaces; i++) {\r\n      var va = getVertexIndex(i, 0)\r\n      var vb = getVertexIndex(i, 1)\r\n      var vc = getVertexIndex(i, 2)\r\n\r\n      for (var segment = 0; segment < 3; segment++) {\r\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\r\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\r\n\r\n        var segmentState = this.segments[i0 * numPoints + i1]\r\n\r\n        if (segmentState) continue // The segment already has been processed in another face\r\n\r\n        // Mark segment as processed (also inverted segment)\r\n        this.segments[i0 * numPoints + i1] = true\r\n        this.segments[i1 * numPoints + i0] = true\r\n\r\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\r\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark0 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p0)\r\n\r\n        if (d > delta) {\r\n          mark0 = 2\r\n          points2.push(p0.clone())\r\n        } else if (d < -delta) {\r\n          mark0 = 1\r\n          points1.push(p0.clone())\r\n        } else {\r\n          mark0 = 3\r\n          points1.push(p0.clone())\r\n          points2.push(p0.clone())\r\n        }\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark1 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p1)\r\n\r\n        if (d > delta) {\r\n          mark1 = 2\r\n          points2.push(p1.clone())\r\n        } else if (d < -delta) {\r\n          mark1 = 1\r\n          points1.push(p1.clone())\r\n        } else {\r\n          mark1 = 3\r\n          points1.push(p1.clone())\r\n          points2.push(p1.clone())\r\n        }\r\n\r\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\r\n          // Intersection of segment with the plane\r\n\r\n          this.tempLine1.start.copy(p0)\r\n          this.tempLine1.end.copy(p1)\r\n\r\n          var intersection = new Vector3()\r\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\r\n\r\n          if (intersection === undefined) {\r\n            // Shouldn't happen\r\n            console.error('Internal error: segment does not intersect plane.')\r\n            output.segmentedObject1 = null\r\n            output.segmentedObject2 = null\r\n            return 0\r\n          }\r\n\r\n          points1.push(intersection)\r\n          points2.push(intersection.clone())\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate debris mass (very fast and imprecise):\r\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\r\n\r\n    // Calculate debris Center of Mass (again fast and imprecise)\r\n    this.tempCM1.set(0, 0, 0)\r\n    var radius1 = 0\r\n    var numPoints1 = points1.length\r\n\r\n    if (numPoints1 > 0) {\r\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\r\n\r\n      this.tempCM1.divideScalar(numPoints1)\r\n      for (var i = 0; i < numPoints1; i++) {\r\n        var p = points1[i]\r\n        p.sub(this.tempCM1)\r\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM1.add(object.position)\r\n    }\r\n\r\n    this.tempCM2.set(0, 0, 0)\r\n    var radius2 = 0\r\n    var numPoints2 = points2.length\r\n    if (numPoints2 > 0) {\r\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\r\n\r\n      this.tempCM2.divideScalar(numPoints2)\r\n      for (var i = 0; i < numPoints2; i++) {\r\n        var p = points2[i]\r\n        p.sub(this.tempCM2)\r\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM2.add(object.position)\r\n    }\r\n\r\n    var object1 = null\r\n    var object2 = null\r\n\r\n    var numObjects = 0\r\n\r\n    /**\r\n     * MOD: Wrapped in try catch block to avoid errors\r\n     */\r\n    if (numPoints1 > 4) {\r\n      try {\r\n        object1 = new Mesh(newConvexGeometry(points1), object.material)\r\n        object1.position.copy(this.tempCM1)\r\n        object1.quaternion.copy(object.quaternion)\r\n        object1.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object1,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius1 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts', true)\r\n        logger(error, true)\r\n      }\r\n    }\r\n\r\n    if (numPoints2 > 4) {\r\n      try {\r\n        object2 = new Mesh(newConvexGeometry(points2), object.material)\r\n        object2.position.copy(this.tempCM2)\r\n        object2.quaternion.copy(object.quaternion)\r\n        object2.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object2,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius2 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts', true)\r\n        logger(error, true)\r\n      }\r\n    }\r\n\r\n    output.object1 = object1\r\n    output.object2 = object2\r\n\r\n    return numObjects\r\n  }\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[4] * y + e[8] * z\r\n  v.y = e[1] * x + e[5] * y + e[9] * z\r\n  v.z = e[2] * x + e[6] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z\r\n  v.y = e[4] * x + e[5] * y + e[6] * z\r\n  v.z = e[8] * x + e[9] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a tied (ordinary) vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\r\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\r\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\r\n  var v1 = new Vector3()\r\n\r\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\r\n    resultPlane.normal.copy(plane.normal)\r\n    resultPlane.constant = plane.constant\r\n\r\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\r\n\r\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\r\n\r\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\r\n  }\r\n})()\r\n\r\nexport { ConvexObjectBreaker }\r\n","// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\r\nconst wasmSupported = (() => {\r\n    try {\r\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\r\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\r\n            if (module instanceof WebAssembly.Module)\r\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.error(e.message);\r\n    }\r\n    return false;\r\n})();\r\nconst loadScriptAsync = (url, doneCallback) => {\r\n    var tag = document.createElement('script');\r\n    tag.onload = () => {\r\n        doneCallback();\r\n    };\r\n    tag.onerror = () => {\r\n        throw new Error(`failed to load ${url}`);\r\n    };\r\n    tag.async = true;\r\n    tag.src = url;\r\n    document.head.appendChild(tag);\r\n};\r\nconst loadAmmoModule = (path, doneCallback) => {\r\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\r\n    if (wasmSupported)\r\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\r\n    else\r\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\r\n};\r\nexport default loadAmmoModule;\r\n//# sourceMappingURL=wasmLoader.js.map","import loadAmmoModule from './wasmLoader';\r\nconst PhysicsLoader = (path, callback) => {\r\n    if (typeof window !== 'undefined')\r\n        window.__loadPhysics = true;\r\n    loadAmmoModule(path, () => {\r\n        Ammo().then(() => {\r\n            callback();\r\n        });\r\n    });\r\n};\r\nexport { PhysicsLoader };\r\n//# sourceMappingURL=physicsLoader.js.map","// https://www.typescriptlang.org/docs/handbook/mixins.html\r\nconst applyMixins = (derivedCtor, baseCtors) => {\r\n    baseCtors.forEach(baseCtor => {\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\r\n            // @ts-ignore\r\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\r\n        });\r\n    });\r\n};\r\nexport default applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport applyMixins from '@enable3d/common/dist/applyMixins'\nimport ClosestRayResultCallback from './closestRayResultCallback'\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\nimport { AmmoPhysics } from '../physics'\n\nclass Raycaster {\n  public readonly type: string\n  protected _btRayFrom: Ammo.btVector3\n  protected _btRayTo: Ammo.btVector3\n  protected _btRayCallback: Ammo.RayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n\n  setRayFromWorld(x = 0, y = 0, z = 0) {\n    this._btRayFrom.setValue(x, y, z)\n  }\n\n  setRayToWorld(x = 0, y = 0, z = 0) {\n    this._btRayTo.setValue(x, y, z)\n  }\n\n  hasHit() {\n    return this._btRayCallback.hasHit()\n  }\n\n  rayTest() {\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\n\n    this._btRayCallback =\n      this.type === 'closest'\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\n\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\n  }\n\n  destroy() {\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\n  }\n}\n\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\n\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\n  public readonly type = 'closest'\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n}\n\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\n  public readonly type = 'allHits'\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n}\n\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\n\nexport { ClosestRaycaster, AllHitsRaycaster }\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { AmmoPhysics } from '../physics'\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\n\nexport default class ClosestRayResultCallback {\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\n\n  constructor(protected physics: AmmoPhysics) {}\n\n  getHitPointWorld(): { x: number; y: number; z: number } {\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\n\n    const point = { x: h.x(), y: h.y(), z: h.z() }\n\n    return point\n  }\n\n  getHitNormalWorld() {\n    const h = this._btRayCallback.get_m_hitNormalWorld()\n\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\n\n    return normal\n  }\n\n  getCollisionObject(): ExtendedObject3D {\n    // @ts-ignore\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\n    // @ts-ignore\n    return rb.threeObject\n  }\n}\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\nimport { logger } from '@enable3d/common/dist/logger'\r\n\r\nexport default class AllHitsRayResultCallback {\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointsWorld() {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\r\n\r\n    const points = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // TODO: Remove this in future versions!\r\n  getHitPointWorld() {\r\n    logger('Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\r\n    return this.getHitPointsWorld()\r\n  }\r\n\r\n  getHitNormalsWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normals = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return normals\r\n  }\r\n\r\n  getCollisionObjects() {\r\n    const threeObjects: ExtendedObject3D[] = []\r\n    const objects = this._btRayCallback.get_m_collisionObjects()\r\n\r\n    for (let i = objects.size() - 1; i >= 0; i--) {\r\n      // @ts-ignore\r\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      threeObjects.push(rb.threeObject)\r\n    }\r\n    return threeObjects\r\n  }\r\n}\r\n","/**\n * @author yandeu\n * @description Ported to TypeScript\n */\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * This is the Clock class THREE provides.\n */\nclass Clock {\n  autoStart: boolean\n  startTime: number\n  oldTime: number\n  elapsedTime: number\n  running: boolean\n\n  constructor(autoStart = true) {\n    this.autoStart = autoStart !== undefined ? autoStart : true\n    this.startTime = 0\n    this.oldTime = 0\n    this.elapsedTime = 0\n    this.running = false\n  }\n\n  start() {\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\n\n    this.oldTime = this.startTime\n    this.elapsedTime = 0\n    this.running = true\n  }\n\n  stop() {\n    this.getElapsedTime()\n    this.running = false\n    this.autoStart = false\n  }\n\n  getElapsedTime() {\n    this.getDelta()\n    return this.elapsedTime\n  }\n\n  getDelta() {\n    let diff = 0\n\n    if (this.autoStart && !this.running) {\n      this.start()\n      return 0\n    }\n\n    if (this.running) {\n      const newTime = (typeof performance === 'undefined' ? Date : performance).now()\n\n      diff = (newTime - this.oldTime) / 1000\n      this.oldTime = newTime\n\n      this.elapsedTime += diff\n    }\n\n    return diff\n  }\n}\n\nexport { Clock }\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { logger } from '@enable3d/common/dist/logger'\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\n\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\r\nexport { ExtendedObject3D }\r\n\r\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\r\nexport { ExtendedMesh }\r\n\r\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\r\nexport { ExtendedGroup }\r\n\r\nimport Shapes from './shapes'\r\nimport Constraints from './constraints'\r\nimport { Events } from '@yandeu/events'\r\nimport { Geometry } from './externals'\r\nimport { BufferGeometry, Euler, Matrix4, Quaternion, REVISION, Scene, Vector3 } from 'three'\r\nimport {\r\n  createHACDShapes,\r\n  createHullShape,\r\n  createTriMeshShape,\r\n  createVHACDShapes,\r\n  iterateGeometries\r\n} from './three-to-ammo'\r\nimport { createTorusShape } from './torusShape'\r\nimport Factories from '@enable3d/common/dist/factories'\r\nimport { CollisionEvents } from './collisionEvents'\r\n\r\nimport DebugDrawer from './debugDrawer'\r\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\r\n\r\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\r\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\r\nexport { PhysicsLoader }\r\n\r\nimport * as Types from '@enable3d/common/dist/types'\r\nimport { AllHitsRaycaster, ClosestRaycaster } from './raycaster/raycaster'\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\nexport { Types }\r\n\r\n// Export THREE.Clock\r\nexport { Clock } from './lib/Clock'\r\n\r\nclass AmmoPhysics extends Events {\r\n  public worldTransform: Ammo.btTransform\r\n  public factory: Factories\r\n  public isHeadless: boolean\r\n\r\n  public rigidBodies: ExtendedObject3D[] = []\r\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n  protected gravity: { x: number; y: number; z: number }\r\n\r\n  protected tmpEuler: Euler\r\n  protected tmpQuaternion: Quaternion\r\n  protected tmpVector3: Vector3\r\n  protected tmpVector3a: Vector3\r\n  protected tmpMatrix4: Matrix4\r\n  protected tmpMatrix4a: Matrix4\r\n  protected tmpBtVector3: Ammo.btVector3\r\n  protected tmpBtQuaternion: Ammo.btQuaternion\r\n\r\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\r\n  protected debugDrawer: DebugDrawer\r\n  private convexBreaker: any\r\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\r\n  private objectsToRemove: any[]\r\n  private numObjectsToRemove: number\r\n\r\n  protected emptyV3: Vector3\r\n  protected impactPoint: Vector3\r\n  protected impactNormal: Vector3\r\n\r\n  protected defaultMaterial: DefaultMaterial\r\n\r\n  private shapes: Shapes\r\n  private constraints: Constraints\r\n  public collisionEvents: CollisionEvents\r\n\r\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\r\n\r\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\r\n    super()\r\n\r\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\r\n    this.isHeadless = scene === 'headless' ? true : false\r\n\r\n    this.tmpEuler = new Euler()\r\n    this.tmpQuaternion = new Quaternion()\r\n    this.tmpVector3 = new Vector3()\r\n    this.tmpVector3a = new Vector3()\r\n    this.tmpMatrix4 = new Matrix4()\r\n    this.tmpMatrix4a = new Matrix4()\r\n    this.tmpBtVector3 = new Ammo.btVector3()\r\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    this.emptyV3 = new Vector3()\r\n    this.impactPoint = new Vector3()\r\n    this.impactNormal = new Vector3()\r\n\r\n    if (scene !== 'headless') {\r\n      this.defaultMaterial = new DefaultMaterial()\r\n\r\n      // const info = `Ammo.js physics provided by enable3d`\r\n      // console.log(\r\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\r\n      //   'background: #ff0000',\r\n      //   'background: #ffff00',\r\n      //   'background: #00ff00',\r\n      //   'background: #00ffff',\r\n      //   'color: #fff; background: #000000;',\r\n      //   'background: none'\r\n      // )\r\n    }\r\n\r\n    this.start()\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  get tmpTrans() {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    return this.worldTransform\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  set tmpTrans(transform: Ammo.btTransform) {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    this.worldTransform = transform\r\n  }\r\n\r\n  /** Destroys a physics body. */\r\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\r\n    // @ts-ignore\r\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\r\n\r\n    if (typeof b?.ammo === 'undefined') return\r\n\r\n    // @ts-ignore\r\n    const name = b.ammo.name\r\n    // @ts-ignore\r\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\r\n\r\n    if (name && obj) {\r\n      if (obj?.body?.ammo) {\r\n        // remove from physics world\r\n        !obj.body.isSoftBody\r\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\r\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\r\n\r\n        // call destructor on body\r\n        obj.body.destructor()\r\n\r\n        // reset properties\r\n        // @ts-ignore\r\n        obj.body = undefined\r\n        obj.hasBody = false\r\n\r\n        // remove from this.objectAmmo\r\n        // @ts-ignore\r\n        delete b.ammo.threeObject\r\n        // remove from this.rigidBodies\r\n        for (let i = 0; i < this.rigidBodies.length; i++) {\r\n          if (this.rigidBodies[i].name === name) {\r\n            this.rigidBodies.splice(i, 1)\r\n            i--\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.scene === 'headless' && obj) obj = null\r\n  }\r\n\r\n  protected setup() {\r\n    // add worldTransform\r\n    this.worldTransform = new Ammo.btTransform()\r\n\r\n    // setup ammo physics\r\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\r\n    else this.physicsWorld = this.setupPhysicsWorld()\r\n\r\n    if (this.scene !== 'headless') {\r\n      // Initialize convexBreaker\r\n      // @ts-ignore\r\n      this.convexBreaker = new ConvexObjectBreaker()\r\n\r\n      this.objectsToRemove = []\r\n      this.numObjectsToRemove = 0\r\n      for (let i = 0; i < 500; i++) {\r\n        this.objectsToRemove[i] = null\r\n      }\r\n    }\r\n\r\n    this.collisionEvents = new CollisionEvents()\r\n    this.factory = new Factories(this.scene)\r\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\r\n      this.addExisting(object, config)\r\n    )\r\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\r\n\r\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\r\n  }\r\n\r\n  public updateDebugger() {\r\n    if (this.scene === 'headless') return\r\n\r\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\r\n  }\r\n\r\n  protected setupPhysicsWorld() {\r\n    const g = this.gravity\r\n    const { softBodies = false } = this.config\r\n\r\n    let physicsWorld: any\r\n\r\n    if (!softBodies) {\r\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\r\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\r\n    }\r\n\r\n    if (softBodies) {\r\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\r\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\r\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\r\n        dispatcher,\r\n        broadphase,\r\n        solver,\r\n        collisionConfiguration,\r\n        softBodySolver\r\n      )\r\n    }\r\n\r\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\r\n    return physicsWorld\r\n  }\r\n\r\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\r\n    if (this.scene === 'headless') return\r\n\r\n    object.material = parent.material\r\n    object.shape = 'hull'\r\n    object.fragmentDepth = parent.fragmentDepth + 1\r\n\r\n    // Add the object to the scene\r\n    this.scene.add(object)\r\n\r\n    // Add physics to the object\r\n    // @ts-ignore\r\n    this.addExisting(object)\r\n\r\n    object.body.fractureImpulse = parent.body.fractureImpulse\r\n    object.body.breakable = false\r\n    // make this fragment breakable in 2.5seconds\r\n    setTimeout(() => {\r\n      object.body.breakable = true\r\n    }, 2500)\r\n  }\r\n\r\n  private removeDebris(object: any) {\r\n    if (this.scene === 'headless') return\r\n\r\n    this.scene.remove(object)\r\n    this.destroy(object)\r\n  }\r\n\r\n  public update(delta: number) {\r\n    this.updatePhysics(delta)\r\n    this.detectCollisions()\r\n  }\r\n\r\n  private updatePhysics(delta: number) {\r\n    // step world\r\n    const deltaTime = delta / 1000\r\n\r\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\r\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\r\n\r\n    // update rigid bodies\r\n    for (let i = 0; i < this.rigidBodies.length; i++) {\r\n      const objThree = this.rigidBodies[i]\r\n      const objPhys = objThree.body.ammo\r\n      const ms = objPhys.getMotionState()\r\n\r\n      if (ms) {\r\n        ms.getWorldTransform(this.worldTransform)\r\n\r\n        // check if object did an update since last call\r\n        if (objThree.body.didUpdate) {\r\n          // @ts-ignore\r\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\r\n          objThree.body.didUpdate = false\r\n        }\r\n\r\n        // update positions\r\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\r\n          // get position and rotation\r\n          objThree.getWorldQuaternion(this.tmpQuaternion)\r\n          objThree.getWorldPosition(this.tmpVector3)\r\n          // adjust tmp variables\r\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\r\n          this.tmpBtQuaternion.setValue(\r\n            this.tmpQuaternion.x,\r\n            this.tmpQuaternion.y,\r\n            this.tmpQuaternion.z,\r\n            this.tmpQuaternion.w\r\n          )\r\n          // set position and rotation\r\n          this.worldTransform.setOrigin(this.tmpBtVector3)\r\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\r\n          // set transform\r\n          ms.setWorldTransform(this.worldTransform)\r\n          // reset needsUpdate\r\n          objThree.body.needUpdate = false\r\n        } else if (objThree.body.skipUpdate) {\r\n          // do nothing ...\r\n        } else if (!objThree.body.ammo.isStaticObject()) {\r\n          // get position and rotation\r\n          const p = this.worldTransform.getOrigin()\r\n          const q = this.worldTransform.getRotation()\r\n          // body offset\r\n          const o = objThree.body.offset\r\n          // set position and rotation\r\n          if (objThree.body.ignoreScale) {\r\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\r\n          } else {\r\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\r\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\r\n          }\r\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\r\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\r\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\r\n          if (objThree.parent) {\r\n            // compatibility fix for three.js >= r123 (Dezember 2020)\r\n            // @ts-ignore\r\n            if (parseInt(REVISION) >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\r\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\r\n          } else {\r\n            this.tmpMatrix4a.identity()\r\n          }\r\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\r\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detectCollisions() {\r\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n\r\n    // reset these vectors\r\n    this.impactPoint.set(0, 0, 0)\r\n    this.impactNormal.set(0, 0, 0)\r\n\r\n    const dispatcher = this.physicsWorld.getDispatcher()\r\n    const numManifolds = dispatcher.getNumManifolds()\r\n\r\n    // check collisions\r\n    for (let i = 0; i < numManifolds; i++) {\r\n      const contactManifold = dispatcher.getManifoldByIndexInternal(i)\r\n      const numContacts = contactManifold.getNumContacts()\r\n\r\n      // @ts-ignore\r\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\r\n\r\n      const threeObject0 = rb0.threeObject as ExtendedObject3D\r\n      const threeObject1 = rb1.threeObject as ExtendedObject3D\r\n\r\n      if (!threeObject0 || !threeObject1) {\r\n        continue\r\n      }\r\n\r\n      // do not check collision between 2 unnamed objects\r\n      // (fragments do not have a name, for example)\r\n      if (rb0.name === '' && rb1.name === '') continue\r\n\r\n      /**\r\n       * Get some information\r\n       */\r\n\r\n      const checkCollisions0 = threeObject0.body?.checkCollisions\r\n      const checkCollisions1 = threeObject1.body?.checkCollisions\r\n\r\n      const breakable0 = threeObject0.body.breakable\r\n      const breakable1 = threeObject1.body.breakable\r\n\r\n      const fractureImpulse0 = threeObject0.body.fractureImpulse\r\n      const fractureImpulse1 = threeObject1.body.fractureImpulse\r\n\r\n      const checkCollisions = checkCollisions0 || checkCollisions1\r\n      const checkBreakable = breakable0 || breakable1\r\n\r\n      if (!checkCollisions && !checkBreakable) continue\r\n\r\n      let contact = false\r\n      let maxImpulse = 0\r\n\r\n      let event: Types.CollisionEvent = 'start'\r\n\r\n      for (let j = 0; j < numContacts; j++) {\r\n        const contactPoint = contactManifold.getContactPoint(j)\r\n        const distance = contactPoint.getDistance()\r\n\r\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\r\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\r\n        if (distance <= 0) {\r\n          contact = true\r\n          const impulse = contactPoint.getAppliedImpulse()\r\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\r\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\r\n\r\n          // handle collision events\r\n          if (checkCollisions0 || checkCollisions1) {\r\n            const names = [threeObject0.name, threeObject1.name].sort()\r\n            const combinedName = `${names[0]}__${names[1]}`\r\n\r\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\r\n\r\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n              detectedCollisions.push({ combinedName, collision: true })\r\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\r\n            }\r\n          }\r\n\r\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\r\n          if (impulse >= maxImpulse) {\r\n            maxImpulse = impulse\r\n            // get what ween need for the convex breaking\r\n            if (breakable0 || breakable1) {\r\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\r\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // if no point has contact, abort\r\n      if (!contact) continue\r\n\r\n      // if no objects are breakable, abort\r\n      if (!checkBreakable) continue\r\n\r\n      /**\r\n       * check for breakable objects (subdivision)\r\n       */\r\n      const MAX_FRAGMENT_DEPTH = 2\r\n\r\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\r\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\r\n      // TODO improve this\r\n\r\n      this.emptyV3.set(0, 0, 0)\r\n      threeObject0.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable0,\r\n        physicsBody: rb0\r\n      }\r\n      threeObject1.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable1,\r\n        physicsBody: rb1\r\n      }\r\n\r\n      // threeObject0\r\n      if (breakable0 && maxImpulse > fractureImpulse0 && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb0.getLinearVelocity()\r\n          const angVel = rb0.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\r\n      }\r\n\r\n      // threeObject1\r\n      if (breakable1 && maxImpulse > fractureImpulse1 && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb1.getLinearVelocity()\r\n          const angVel = rb1.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\r\n      }\r\n    }\r\n\r\n    // remove objects\r\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\r\n      this.removeDebris(this.objectsToRemove[i])\r\n    }\r\n    this.numObjectsToRemove = 0\r\n\r\n    // handle collision end events\r\n    this.earlierDetectedCollisions.forEach(el => {\r\n      const { combinedName } = el\r\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n        const split = combinedName.split('__')\r\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\r\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\r\n        const event = 'end'\r\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\r\n      }\r\n    })\r\n    this.earlierDetectedCollisions = [...detectedCollisions]\r\n  }\r\n\r\n  public setGravity(x = 0, y = -9.8, z = 0) {\r\n    this.tmpBtVector3.setValue(x, y, z)\r\n    this.physicsWorld.setGravity(this.tmpBtVector3)\r\n  }\r\n\r\n  public get debug() {\r\n    if (this.isHeadless) return null\r\n\r\n    return {\r\n      enable: () => {\r\n        this.debugDrawer.enable()\r\n      },\r\n      mode: (debugMode: number = 1) => {\r\n        this.debugDrawer.setDebugMode(debugMode)\r\n      },\r\n      disable: () => {\r\n        this.debugDrawer.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (typeof Ammo === 'undefined') {\r\n      logger('Are you sure you included ammo.js?')\r\n      return\r\n    }\r\n\r\n    if (typeof Ammo === 'function')\r\n      Ammo().then(() => {\r\n        this.setup()\r\n      })\r\n    else this.setup()\r\n  }\r\n\r\n  public get add() {\r\n    return {\r\n      collider: (\r\n        object1: ExtendedObject3D,\r\n        object2: ExtendedObject3D,\r\n        eventCallback: (event: Types.CollisionEvent) => void\r\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\r\n      constraints: this.constraints.addConstraints,\r\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\r\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addPlane(planeConfig, materialConfig),\r\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addSphere(sphereConfig, materialConfig),\r\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addGround(groundConfig, materialConfig),\r\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addBox(boxConfig, materialConfig),\r\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\r\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCone(coneConfig, materialConfig),\r\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addTorus(torusConfig, materialConfig),\r\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\r\n      /**\r\n       * Creates a new Raycaster\r\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\r\n       */\r\n      raycaster: (type = 'closest') => {\r\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\r\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\r\n    const { autoCenter = false } = config\r\n\r\n    // set default params\r\n    const defaultParams = {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1,\r\n      radius: 1,\r\n      radiusTop: 1, // for the cylinder\r\n      radiusBottom: 1, // for the cylinder\r\n      tube: 0.4, // for the torus\r\n      tubularSegments: 6 // for the torus\r\n    }\r\n\r\n    // determine the shape (fallback to hacd)\r\n    let shape: string = 'unknown'\r\n    // retrieve the shape from the geometry\r\n    const type = object.geometry?.type || 'unknown'\r\n    if (/box/i.test(type)) shape = 'box'\r\n    else if (/cone/i.test(type)) shape = 'cone'\r\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\r\n    else if (/extrude/i.test(type)) shape = 'extrude'\r\n    else if (/plane/i.test(type)) shape = 'plane'\r\n    else if (/sphere/i.test(type)) shape = 'sphere'\r\n    else if (/torus/i.test(type)) shape = 'torus'\r\n\r\n    // @ts-ignore\r\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\r\n\r\n    if (config.shape) {\r\n      params = { ...defaultParams, ...config }\r\n      shape = config.shape\r\n    } else if (object.shape) {\r\n      shape = object.shape\r\n    }\r\n\r\n    // Add all default params if undefined\r\n    Object.keys(params).forEach(key => {\r\n      // @ts-ignore\r\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\r\n        // @ts-ignore\r\n        params[key] = defaultParams[key]\r\n      }\r\n    })\r\n\r\n    // auto adjust the center for custom shapes\r\n    if (autoCenter) object.geometry.center()\r\n\r\n    // adjust the cylinder radius for its physcis body\r\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\r\n\r\n    // some aliases\r\n    if (shape === 'extrude') shape = 'hacd'\r\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\r\n    if (shape === 'concave') shape = 'concaveMesh'\r\n\r\n    // if we have not found a shape until here, we fallback to 'box'\r\n    if (shape === 'unknown') {\r\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\r\n      shape = 'box'\r\n    }\r\n\r\n    return { shape, params, object }\r\n  }\r\n\r\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\r\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\r\n    const { axis = 'y' } = params\r\n\r\n    const btHalfExtents = new Ammo.btVector3()\r\n\r\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\r\n    // @ts-ignore\r\n    const geometry = object?.geometry as Geometry\r\n    if (object && geometry?.isGeometry) {\r\n      // @ts-ignore\r\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\r\n    }\r\n\r\n    // prepare data to pass to three-to-ammo.js\r\n    const extractData = (object: any) => {\r\n      const matrixWorld = new Matrix4().elements\r\n      const vertices: any[] = []\r\n      const matrices: any[] = []\r\n      const indexes: any[] = []\r\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\r\n        vertices.push(vertexArray)\r\n        matrices.push(matrixArray)\r\n        indexes.push(indexArray)\r\n      })\r\n\r\n      return { vertices, matrices, indexes, matrixWorld }\r\n    }\r\n\r\n    let d = {} as any\r\n    // extract data for complex shapes generated with three-to-ammo.js\r\n    if (this.complexShapes.indexOf(shape) !== -1) d = extractData(object)\r\n\r\n    let collisionShape\r\n    switch (shape) {\r\n      case 'box':\r\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\r\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n        break\r\n      case 'sphere':\r\n        collisionShape = new Ammo.btSphereShape(params.radius)\r\n        break\r\n      case 'cylinder':\r\n        switch (axis) {\r\n          case 'y':\r\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\r\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\r\n            break\r\n          case 'x':\r\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\r\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\r\n            break\r\n          case 'z':\r\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\r\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\r\n            break\r\n        }\r\n        break\r\n      case 'cone':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'capsule':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'torus':\r\n        collisionShape = createTorusShape(params, quat)\r\n        break\r\n      case 'plane':\r\n        // uses a triMeshShape for the plane\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'hull':\r\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\r\n        break\r\n      case 'hacd':\r\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'vhacd':\r\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'convexMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'concaveMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: true\r\n        })\r\n        break\r\n    }\r\n\r\n    Ammo.destroy(btHalfExtents)\r\n\r\n    // if there is a x, y or z, take is as temporary offset parameter\r\n    const { x, y, z } = params\r\n    if (x || y || z) {\r\n      // @ts-ignore\r\n      collisionShape.offset = { x: x || 0, y: y || 0, z: z || 0 }\r\n    }\r\n\r\n    // in some cases, like hacd, it will be an array of shapes\r\n    // so we merge them\r\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\r\n\r\n    return collisionShape as Ammo.btCollisionShape\r\n  }\r\n\r\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\r\n    const compoundShape = new Ammo.btCompoundShape()\r\n    collisionShapes.forEach(shape => {\r\n      // @ts-ignore // _tmp is a custom parameter\r\n      const _tmp = shape._tmp\r\n\r\n      if (_tmp) {\r\n        const { pos, quat, scale, margin } = _tmp\r\n        const transform = this.applyPosQuatScaleMargin(shape, pos, quat, scale, margin)\r\n        compoundShape.addChildShape(transform, shape)\r\n      } else {\r\n        const transform = new Ammo.btTransform()\r\n        transform.setIdentity()\r\n        compoundShape.addChildShape(transform, shape)\r\n      }\r\n    })\r\n    return compoundShape\r\n  }\r\n\r\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\r\n    const { hasBody } = object\r\n    if (hasBody) {\r\n      logger(`Object \"${object.name}\" already has a physical body!`)\r\n      return\r\n    }\r\n\r\n    const pos = new Vector3()\r\n    const quat = new Quaternion()\r\n    const scale = new Vector3()\r\n    object.getWorldPosition(pos)\r\n    object.getWorldQuaternion(quat)\r\n    object.getWorldScale(scale)\r\n\r\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\r\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\r\n\r\n    const {\r\n      shape = 'unknown',\r\n      compound = [],\r\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\r\n      collisionFlags = 0,\r\n      collisionGroup = 1,\r\n      collisionMask = -1,\r\n      offset = undefined,\r\n      breakable = false,\r\n      addChildren = true,\r\n      margin = 0.01,\r\n      ignoreScale = false,\r\n      fractureImpulse = 1\r\n    } = config\r\n\r\n    if (ignoreScale) scale.set(1, 1, 1)\r\n\r\n    if (compound.length >= 1) {\r\n      // if we want a custom compound shape, we simply do\r\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\r\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n      const localTransform = this.applyPosQuatScaleMargin(compoundShape, pos, quat, scale, margin)\r\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\r\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n      object.body.breakable = breakable\r\n      object.body.fractureImpulse = fractureImpulse\r\n      object.body.ignoreScale = ignoreScale\r\n      return\r\n    }\r\n\r\n    const collisionShapes: Ammo.btCollisionShape[] = []\r\n\r\n    // if object is a THREE.Group, object does not have a mesh\r\n    if (shape !== 'unknown' || object.isMesh) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    // check if the object has children\r\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\r\n      object.children.forEach((child: any) => {\r\n        if (child.isMesh) {\r\n          const p = this.prepareThreeObjectForCollisionShape(child)\r\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n\r\n          // @ts-ignore // the relative pos, quat and scale to its parent\r\n          cs._tmp = {\r\n            pos: child.position.clone(),\r\n            quat: child.quaternion.clone(),\r\n            scale: child.scale.clone(),\r\n            margin: margin\r\n          }\r\n\r\n          collisionShapes.push(cs)\r\n        }\r\n      })\r\n    }\r\n\r\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\r\n    if (collisionShapes.length === 0) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    const collisionShape =\r\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n\r\n    // add rigid body\r\n    // object.position.copy(pos)\r\n    // object.quaternion.copy(quat)\r\n\r\n    const localTransform = this.applyPosQuatScaleMargin(collisionShape, pos, quat, scale, margin)\r\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\r\n\r\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n    object.body.breakable = breakable\r\n    object.body.fractureImpulse = fractureImpulse\r\n    object.body.ignoreScale = ignoreScale\r\n  }\r\n\r\n  public addRigidBodyToWorld(\r\n    object: ExtendedObject3D,\r\n    rigidBody: Ammo.btRigidBody,\r\n    collisionFlags: number,\r\n    collisionGroup: number,\r\n    collisionMask: number,\r\n    offset?: { x?: number; y?: number; z?: number }\r\n  ) {\r\n    this.rigidBodies.push(object)\r\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\r\n\r\n    const ptr = Object.values(rigidBody)[0]\r\n    // @ts-ignore\r\n    rigidBody.name = object.name\r\n    object.body = new PhysicsBody(this, rigidBody)\r\n    object.hasBody = true\r\n    // @ts-ignore\r\n    object.ptr = ptr\r\n    // @ts-ignore\r\n    rigidBody.threeObject = object\r\n\r\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    object.body.setCollisionFlags(collisionFlags)\r\n  }\r\n\r\n  public applyPosQuatScaleMargin(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    pos: Vector3 = new Vector3(),\r\n    quat: Quaternion = new Quaternion(),\r\n    scale: Vector3 = new Vector3(),\r\n    margin: number = 0.01\r\n  ) {\r\n    collisionShape.setMargin(margin)\r\n\r\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\r\n\r\n    const localTransform = new Ammo.btTransform()\r\n    localTransform.setIdentity()\r\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\r\n    localTransform.setRotation(rotation)\r\n\r\n    Ammo.destroy(rotation)\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    return localTransform\r\n  }\r\n\r\n  public collisionShapeToRigidBody(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    localTransform: Ammo.btTransform,\r\n    mass: number,\r\n    disableDeactivation: boolean\r\n  ) {\r\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\r\n    const localInertia = new Ammo.btVector3(0, 0, 0)\r\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\r\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\r\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\r\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\r\n    return rigidBody\r\n  }\r\n}\r\n\r\nexport { AmmoPhysics }\r\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport {\n  AddExistingConfig,\n  BoxConfig,\n  ConeConfig,\n  CylinderConfig,\n  ExtendedObject3D,\n  ExtrudeConfig,\n  GroundConfig,\n  MaterialConfig,\n  PlaneConfig,\n  SphereConfig,\n  TorusConfig\n} from '@enable3d/common/dist/types'\nimport Factories from '@enable3d/common/dist/factories'\n\nclass Shapes {\n  constructor(\n    private factory: Factories,\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\n  ) {}\n\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\n    this.addExisting(plane, planeConfig)\n    return plane\n  }\n\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\n    this.addExisting(sphere, sphereConfig)\n    return sphere\n  }\n\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\n    const box = this.factory.add.box(boxConfig, materialConfig)\n    this.addExisting(box, boxConfig)\n    return box\n  }\n\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\n    this.addExisting(ground, config)\n    return ground\n  }\n\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\n    this.addExisting(cylinder, cylinderConfig)\n    return cylinder\n  }\n\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\n    this.addExisting(cone, coneConfig)\n    return cone\n  }\n\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\n    this.addExisting(torus, torusConfig)\n    return torus\n  }\n\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\n    object.translateX(1)\n    this.addExisting(object)\n    return object\n  }\n}\n\nexport default Shapes\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @description  This is a modified version of the original code from Kevin Lee\n */\n\n/**\n * @author       Kevin Lee (https://github.com/InfiniteLee)\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\n */\n\nimport { BufferAttribute, BufferGeometry, LineBasicMaterial, LineSegments, Scene, StaticDrawUsage } from 'three'\n\nconst AmmoDebugConstants = {\n  NoDebug: 0,\n  DrawWireframe: 1,\n  DrawAabb: 2,\n  DrawFeaturesText: 4,\n  DrawContactPoints: 8,\n  NoDeactivation: 16,\n  NoHelpText: 32,\n  DrawText: 64,\n  ProfileTimings: 128,\n  EnableSatComparison: 256,\n  DisableBulletLCP: 512,\n  EnableCCD: 1024,\n  DrawConstraints: 1 << 11, //2048\n  DrawConstraintLimits: 1 << 12, //4096\n  FastWireframe: 1 << 13, //8192\n  DrawNormals: 1 << 14, //16384\n  DrawOnTop: 1 << 15, //32768\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\n}\n\n/**\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\n */\nclass DebugDrawer {\n  debugDrawMode: number\n  geometry: BufferGeometry\n  index: number\n  mesh: LineSegments\n  enabled: boolean\n  debugDrawer: Ammo.DebugDrawer\n  warnedOnce: boolean\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\n    const maxBufferSize = options.maxBufferSize || 1000000\n\n    this.geometry = new BufferGeometry()\n    const vertices = new Float32Array(maxBufferSize * 3)\n    const colors = new Float32Array(maxBufferSize * 3)\n\n    /*\n    I do not know the difference, just using the first one.\n    export const StaticDrawUsage: Usage;\n    export const DynamicDrawUsage: Usage;\n    export const StreamDrawUsage: Usage;\n    export const StaticReadUsage: Usage;\n    export const DynamicReadUsage: Usage;\n    export const StreamReadUsage: Usage;\n    export const StaticCopyUsage: Usage;\n    export const DynamicCopyUsage: Usage;\n    export const StreamCopyUsage: Usage;\n     */\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\n\n    this.index = 0\n\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: !drawOnTop\n    })\n\n    this.mesh = new LineSegments(this.geometry, material)\n    if (drawOnTop) this.mesh.renderOrder = 999\n    this.mesh.frustumCulled = false\n\n    this.enabled = false\n\n    this.debugDrawer = new Ammo.DebugDrawer()\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\n\n    this.world.setDebugDrawer(this.debugDrawer)\n  }\n\n  enable() {\n    this.enabled = true\n    this.scene.add(this.mesh)\n  }\n\n  disable() {\n    this.enabled = false\n    this.scene.remove(this.mesh)\n  }\n\n  update() {\n    if (!this.enabled) {\n      return\n    }\n\n    if (this.index != 0) {\n      // @ts-ignore\n      this.geometry.attributes.position.needsUpdate = true\n      // @ts-ignore\n      this.geometry.attributes.color.needsUpdate = true\n    }\n\n    this.index = 0\n    this.world.debugDrawWorld()\n    this.geometry.setDrawRange(0, this.index)\n  }\n\n  drawLine(from: any, to: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const fromX = heap[(from + 0) / 4]\n    const fromY = heap[(from + 4) / 4]\n    const fromZ = heap[(from + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const toX = heap[(to + 0) / 4]\n    const toY = heap[(to + 4) / 4]\n    const toZ = heap[(to + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  //TODO: figure out how to make lifeTime work\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\n    // @ts-ignore\n    const heap = Ammo.HEAPF32\n    const r = heap[(color + 0) / 4]\n    const g = heap[(color + 4) / 4]\n    const b = heap[(color + 8) / 4]\n\n    const x = heap[(pointOnB + 0) / 4]\n    const y = heap[(pointOnB + 4) / 4]\n    const z = heap[(pointOnB + 8) / 4]\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n\n    const dx = heap[(normalOnB + 0) / 4] * distance\n    const dy = heap[(normalOnB + 4) / 4] * distance\n    const dz = heap[(normalOnB + 8) / 4] * distance\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\n  }\n\n  reportErrorWarning(warningString: string) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\n      // @ts-ignore\n      console.warn(Ammo.Pointer_stringify(warningString))\n    } else if (!this.warnedOnce) {\n      this.warnedOnce = true\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\n    }\n  }\n\n  draw3dText(_location: any, _textString: any) {\n    //TODO\n    console.warn('TODO: draw3dText')\n  }\n\n  setDebugMode(debugMode: any) {\n    this.debugDrawMode = debugMode\n  }\n\n  getDebugMode() {\n    return this.debugDrawMode\n  }\n}\n\nexport default DebugDrawer\n","/**\n * @author       Yannick Deubel (https://github.com/yandeu)\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\n */\n\nimport { Quaternion } from 'three'\n\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\nexport const createTorusShape = (\n  config: { radius: number; tube: number; tubularSegments: number },\n  quat: Quaternion\n) => {\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\n\n  const SIMD_PI = Math.PI\n  const subdivisions = tubularSegments\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\n\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\n  cylinderShape.setMargin(0.05)\n\n  const compoundShape = new Ammo.btCompoundShape()\n\n  const forward = new Ammo.btVector3(0, 0, 1)\n  const side = new Ammo.btVector3(0, radius, 0)\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\n\n  for (let x = 0; x < subdivisions; x++) {\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\n    const position = side.rotate(forward, angle)\n    const transform = new Ammo.btTransform()\n    rotation.setRotation(forward, angle + Math.PI / 2)\n    transform.setIdentity()\n    transform.setOrigin(position)\n    transform.setRotation(rotation)\n    compoundShape.addChildShape(transform, cylinderShape)\n  }\n\n  return compoundShape\n}\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Events } from '@yandeu/events';\r\nimport { Euler, Quaternion } from 'three';\r\nclass PhysicsBody {\r\n    constructor(physics, ammo) {\r\n        this.physics = physics;\r\n        this.ammo = ammo;\r\n        this.ignoreScale = false;\r\n        this.isSoftBody = false;\r\n        this.offset = { x: 0, y: 0, z: 0 };\r\n        this.errors = [];\r\n        this.checkCollisions = false;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.didUpdate = false;\r\n        /** Skip syncing the mesh to the physics body. */\r\n        this.skipUpdate = false;\r\n        this._emitUpdateEvents = false;\r\n        this._needUpdate = false;\r\n        this.tmpEuler = new Euler();\r\n        this.tmpQuaternion = new Quaternion();\r\n        this.tmpBtVector3 = new Ammo.btVector3();\r\n        this.tmpBtVector3_1 = new Ammo.btVector3();\r\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\r\n        this.eventEmitter = new Events();\r\n        // @ts-ignore\r\n        this.name = ammo.name;\r\n    }\r\n    /**\r\n     * Don't call this manually! Do physics.destroy() instead.\r\n     */\r\n    destructor() {\r\n        // remove events\r\n        if (this.eventEmitter)\r\n            this.eventEmitter.removeAllListeners();\r\n        // destroy tmp ammo values\r\n        Ammo.destroy(this.tmpBtVector3);\r\n        Ammo.destroy(this.tmpBtVector3_1);\r\n        Ammo.destroy(this.tmpBtQuaternion);\r\n        // destory collision shape\r\n        Ammo.destroy(this.ammo.getCollisionShape());\r\n        // destroy body\r\n        Ammo.destroy(this.ammo);\r\n    }\r\n    setupEventEmitter() {\r\n        if (typeof this.eventEmitter === 'undefined')\r\n            this.eventEmitter = new Events();\r\n    }\r\n    get needUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n    set needUpdate(need) {\r\n        if (!need && this._needUpdate)\r\n            this.didUpdate = true;\r\n        this._needUpdate = need;\r\n    }\r\n    onUpdateEvent(updateCallback, once = false) {\r\n        this.setupEventEmitter();\r\n        this._emitUpdateEvents = true;\r\n        if (once)\r\n            this.eventEmitter.once('update', () => {\r\n                updateCallback();\r\n            });\r\n        else\r\n            this.eventEmitter.on('update', () => {\r\n                updateCallback();\r\n            });\r\n    }\r\n    get on() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\r\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\r\n        };\r\n    }\r\n    get once() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\r\n        };\r\n    }\r\n    onCollision(collisionCallback) {\r\n        this.checkCollisions = true;\r\n        this.physics.collisionEvents.on('collision', (data) => {\r\n            const { bodies, event } = data;\r\n            if (bodies[0].name === this.name)\r\n                collisionCallback(bodies[1], event);\r\n            else if (bodies[1].name === this.name)\r\n                collisionCallback(bodies[0], event);\r\n        });\r\n    }\r\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\r\n    transform() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().getWorldTransform(t);\r\n    }\r\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\r\n    refresh() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().setWorldTransform(t);\r\n    }\r\n    /** Set the rotation in radians. (for headless mode only) */\r\n    setRotation(x, y, z) {\r\n        const e = this.tmpEuler.set(x, y, z);\r\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\r\n        q.setFromEuler(e);\r\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\r\n        const ammoQuat = this.tmpBtQuaternion;\r\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\r\n        const t = this.physics.worldTransform;\r\n        t.setRotation(ammoQuat);\r\n    }\r\n    /** Get the rotation in radians. (for headless mode only) */\r\n    get rotation() {\r\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n        let x, y, z;\r\n        const t = this.physics.worldTransform;\r\n        const ammoQuat = t.getRotation();\r\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\r\n        if (q1.w > 1)\r\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\r\n        const angle = 2 * Math.acos(q1.w);\r\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\r\n        if (s < 0.001) {\r\n            // test to avoid divide by zero, s is always positive due to sqrt\r\n            // if s close to zero then direction of axis not important\r\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\r\n            y = q1.y;\r\n            z = q1.z;\r\n        }\r\n        else {\r\n            x = q1.x / s; // normalized axis\r\n            y = q1.y / s;\r\n            z = q1.z / s;\r\n        }\r\n        return { x: x * angle, y: y * angle, z: z * angle };\r\n    }\r\n    /** Get the quaternion. (for headless mode only) */\r\n    get quaternion() {\r\n        const t = this.physics.worldTransform;\r\n        const q = t.getRotation();\r\n        return { x: q.x(), y: q.y(), z: q.z(), w: q.w() };\r\n    }\r\n    /** Set position. (for headless mode only) */\r\n    setPosition(x, y, z) {\r\n        const t = this.physics.worldTransform;\r\n        t.getOrigin().setValue(x, y, z);\r\n    }\r\n    /** Get position. (for headless mode only) */\r\n    get position() {\r\n        const t = this.physics.worldTransform;\r\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\r\n    }\r\n    get velocity() {\r\n        return {\r\n            x: this.ammo.getLinearVelocity().x(),\r\n            y: this.ammo.getLinearVelocity().y(),\r\n            z: this.ammo.getLinearVelocity().z()\r\n        };\r\n    }\r\n    get angularVelocity() {\r\n        return {\r\n            x: this.ammo.getAngularVelocity().x(),\r\n            y: this.ammo.getAngularVelocity().y(),\r\n            z: this.ammo.getAngularVelocity().z()\r\n        };\r\n    }\r\n    setVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    // Apply Force methods\r\n    applyForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceX(value) {\r\n        this.tmpBtVector3.setValue(value, 0, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceY(value) {\r\n        this.tmpBtVector3.setValue(0, value, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceZ(value) {\r\n        this.tmpBtVector3.setValue(0, 0, value);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    // Apply \"Something\" Methods\r\n    applyCentralForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralForce(this.tmpBtVector3);\r\n    }\r\n    applyCentralImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyCentralLocalForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\r\n    }\r\n    applyImpulse(impulse, relativePosition) {\r\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\r\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\r\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\r\n    }\r\n    applyLocalTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorqueImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\r\n    }\r\n    /**\r\n     * Add the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\r\n    setCollisionFlags(value) {\r\n        this.ammo.setCollisionFlags(value);\r\n    }\r\n    /**\r\n     * Get the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    getCollisionFlags() {\r\n        return this.ammo.getCollisionFlags();\r\n    }\r\n    /**\r\n     * Set the restitution (same as bounciness)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setRestitution(value) {\r\n        this.ammo.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the bounciness (same as restitution)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setBounciness(value) {\r\n        this.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the friction\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setFriction(value) {\r\n        this.ammo.setFriction(value);\r\n    }\r\n    /**\r\n     * Set the linear and angular damping\r\n     * @param linear A number from 0 to 1.\r\n     * @param angular A number from 0 to 1.\r\n     */\r\n    setDamping(linear, angular) {\r\n        this.ammo.setDamping(linear, angular);\r\n    }\r\n    /** Set per body gravity */\r\n    setGravity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setGravity(this.tmpBtVector3);\r\n    }\r\n    setLinearFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearFactor(this.tmpBtVector3);\r\n    }\r\n    setAngularFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularFactor(this.tmpBtVector3);\r\n    }\r\n    setCcdMotionThreshold(threshold) {\r\n        this.ammo.setCcdMotionThreshold(threshold);\r\n    }\r\n    setCcdSweptSphereRadius(radius) {\r\n        this.ammo.setCcdSweptSphereRadius(radius);\r\n    }\r\n}\r\nexport default PhysicsBody;\r\n//# sourceMappingURL=physicsBody.js.map"],"sourceRoot":""}